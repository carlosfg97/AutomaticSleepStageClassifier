{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Classifiers","provenance":[],"collapsed_sections":["yTQ-u9WojPZx"],"machine_shape":"hm","authorship_tag":"ABX9TyPqHVmTHitGMSqLX6IvkHiK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"w6-3z3qqchjT"},"source":["# Automatic sleep stage classification with CNN and LSTM   \n","\n","\n","## Classifiers \n","\n","This is the second of 3 notebooks for Automatic sleep stage classification with CNN and LSTM.\n","\n","The general purpose of the 3 notebooks is to extract data from Sleep EDF database and perform sleep classification with CNN and LSTM techniques. \n","\n","Some parts of the work have been adapted from the paper published by Supratak et al. and its corresponding code available at (https://github.com/akaraspt/deepsleepnet).\n","\n","For best reproducibility effects, I recommend to run all code in a Google Colab environment with an active GPU hardware accelerator.\n","\n","This second notebook has the next sections:\n","* I. Libraries and data load\n","* II. CNN Concat\n","* III. CNN + LSTM\n","* IV. Hypnogram comparison\n","\n"]},{"cell_type":"markdown","metadata":{"id":"yTQ-u9WojPZx"},"source":["# I. Libraries and data load\n","\n","Libraries and functions that will be needed. Loading of the NPZ files generated in the first notebook."]},{"cell_type":"code","metadata":{"id":"-LHrYNXcjP7F","executionInfo":{"status":"ok","timestamp":1605154811351,"user_tz":300,"elapsed":1535,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}}},"source":["# Libraries\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","import time\n","from datetime import datetime as dt\n","import pandas as pd\n","import os\n","import seaborn as sns\n","\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import classification_report\n","from sklearn.model_selection import StratifiedKFold\n","\n","from sklearn.preprocessing import Normalizer\n","\n","\n","\n","\n","#Functions\n","\n","def print_confusion_matrix(confusion_matrix, class_names, figsize = (10,7), fontsize=14):\n","\n","    df_cm = pd.DataFrame(\n","        confusion_matrix, index=class_names, columns=class_names, \n","    )\n","    fig = plt.figure(figsize=figsize)\n","    try:\n","        heatmap = sns.heatmap(df_cm, annot=True, fmt=\"d\")\n","    except ValueError:\n","        raise ValueError(\"Confusion matrix values must be integers.\")\n","    heatmap.yaxis.set_ticklabels(heatmap.yaxis.get_ticklabels(), rotation=0, ha='right', fontsize=fontsize)\n","    heatmap.xaxis.set_ticklabels(heatmap.xaxis.get_ticklabels(), rotation=45, ha='right', fontsize=fontsize)\n","    plt.ylabel('True label')\n","    plt.xlabel('Predicted label')\n","    return fig\n","\n","def _load_npz_file(npz_file):\n","    \"\"\"Load data and labels from a npz file.\"\"\"\n","    with np.load(npz_file) as f:\n","        data = f[\"x\"]\n","        labels = f[\"y\"]\n","        sampling_rate = f[\"fs\"]\n","    return data, labels, sampling_rate\n","\n","def _load_npz_list_files(npz_files):\n","    \"\"\"Load data and labels from list of npz files.\"\"\"\n","    data = []\n","    labels = []\n","    fs = None\n","    for npz_f in npz_files:\n","        tmp_data, tmp_labels, sampling_rate = _load_npz_file(npz_f)\n","        if fs is None:\n","            fs = sampling_rate\n","        elif fs != sampling_rate:\n","            raise Exception(\"Found mismatch in sampling rate.\")\n","        data.append(tmp_data)\n","        labels.append(tmp_labels)\n","    data = np.vstack(data)\n","    labels = np.hstack(labels)\n","    return data, labels\n","\n","\n","\n"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"M-SZN7uwrbOH","executionInfo":{"status":"ok","timestamp":1605154817281,"user_tz":300,"elapsed":647,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"4a12e9eb-2b0e-4278-b77b-84ced1c0f511","colab":{"base_uri":"https://localhost:8080/"}},"source":["# Also, mount google drive again to be able to read the files\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')\n","\n"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"jQ44EeXBsTrz"},"source":["## Tensorflow version"]},{"cell_type":"code","metadata":{"id":"rwnYSPv22zPZ","executionInfo":{"status":"ok","timestamp":1605154833863,"user_tz":300,"elapsed":12410,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"8a8e3636-ba37-4526-b94c-0b6110a04f51","colab":{"base_uri":"https://localhost:8080/"}},"source":["import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from keras.regularizers import l2\n","%tensorflow_version 2.x\n","\n","# Make sure to have the GPU active!\n","\n","print(tf.__version__)\n","\n","print(\"Num GPUs Available: \", len(tf.config.experimental.list_physical_devices('GPU')))\n","\n","device_name = tf.test.gpu_device_name()\n","if device_name != '/device:GPU:0':\n","  raise SystemError('GPU device not found')\n","print('Found GPU at: {}'.format(device_name))\n"],"execution_count":3,"outputs":[{"output_type":"stream","text":["2.3.0\n","Num GPUs Available:  1\n","Found GPU at: /device:GPU:0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bZImMkEuz6gR"},"source":["## Reading of recordings"]},{"cell_type":"code","metadata":{"id":"Re-Zbq1jd6lP","executionInfo":{"status":"ok","timestamp":1605154849569,"user_tz":300,"elapsed":14813,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"9bf6f442-bdb1-4f8a-973e-acb4e3970917","colab":{"base_uri":"https://localhost:8080/"}},"source":["# Load npz files\n","\n","# Change variable 'path' with own path\n","\n","path = '/content/gdrive/My Drive/Automatic_sleep_classification/data' #the path where the npz files were saved in the first notebook.\n","\n","#path = '/content/gdrive/My Drive/Tesis/Código/Data_nuevodp'\n","\n","files = os.listdir(path) \n","filespath = []\n","for i in files:\n","  filespath.append(os.path.join(path,i))\n","\n","X, Y = _load_npz_list_files(filespath) \n","\n","X = X.reshape((X.shape[0], X.shape[1], 1))\n","print(X.shape, Y.shape)\n"],"execution_count":4,"outputs":[{"output_type":"stream","text":["(42308, 3000, 1) (42308,)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qk6zZFItXGNr"},"source":["# II. CNN Concat\n","\n","The first network architecture to test in the dataset is a CNN with two parallel legs, inspired from the proposals in Supratak et al. (2017) and Chambon et al. (2018). The feature vectors from neighboring sleep epochs are concatenated into a single longer vector to include temporal information in the prediction.\n","\n","Please refer to the diagram below to review the details of the network. More explanation is provided in the paper. \n","\n","<img src='https://drive.google.com/uc?export=view&id=1Q6nufNIOscq_8iThXfeIdn5n2lFksjg8' alt=\"drawing\" width=\"350\"/>"]},{"cell_type":"code","metadata":{"id":"0NdH5WV6FMy-","executionInfo":{"status":"ok","timestamp":1605156171697,"user_tz":300,"elapsed":636,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}}},"source":["def cnn_builder(model_type): \n","  '''function that sets the CNN layers from input to keras.Model'''\n","\n","  input_length = 15000 if model_type == 'CNN_CONCAT' else 3000\n","\n","  inputs = keras.Input(shape=(input_length,1))\n","\n","  #left leg - short filters\n","\n","  x = layers.Conv1D( filters=64, kernel_size=50, strides=6 , \n","                    name = 'conv1')(inputs)\n","  x = layers.BatchNormalization()(x) \n","  x = layers.ReLU()(x)\n","\n","  x = layers.MaxPool1D(pool_size=8, strides=8, name='max1')(x)\n","\n","  x = layers.Dropout(rate=0.5  , name ='dropout1' )(x)\n","\n","  x = layers.Conv1D(filters=128, kernel_size=8, strides=1, \n","                    name = 'conv2', padding = 'same' )(x)\n","  x = layers.BatchNormalization()(x)\n","  x = layers.ReLU()(x)\n","\n","  x = layers.Conv1D(filters=128, kernel_size=8, strides=1, \n","                    name = 'conv3', padding = 'same' )(x)\n","  x = layers.BatchNormalization()(x)\n","  x = layers.ReLU()(x)\n","\n","  x = layers.Conv1D(filters=128, kernel_size=8, strides=1, \n","                    name = 'conv4', padding = 'same')(x)\n","  x = layers.BatchNormalization()(x)\n","  x = layers.ReLU()(x)\n","\n","  x = layers.MaxPool1D(pool_size=4, strides=4, name = 'max2')(x)\n","  x = layers.Flatten()(x)\n","\n","  #right leg - longer filters\n","  x2 = layers.Conv1D( filters=64, kernel_size=400, strides=50 , \n","                    name = 'conv1_2')(inputs)\n","  x2 = layers.BatchNormalization()(x2)\n","  x2 = layers.ReLU()(x2)\n","\n","  x2 = layers.MaxPool1D(pool_size=4, strides=4, name='max1_2')(x2)\n","\n","  x2 = layers.Dropout(rate=0.5  , name ='dropout1_2' )(x2)\n","\n","  x2 = layers.Conv1D(filters=128, kernel_size=6, strides=1, \n","                    name = 'conv2_2', padding='same' )(x2)\n","  x2 = layers.BatchNormalization()(x2)\n","  x2 = layers.ReLU()(x2)\n","\n","  x2 = layers.Conv1D(filters=128, kernel_size=6, strides=1, \n","                    name = 'conv3_2', padding='same' )(x2)\n","  x2 = layers.BatchNormalization()(x2)\n","  x2 = layers.ReLU()(x2)\n","\n","  x2 = layers.Conv1D(filters=128, kernel_size=6, strides=1, \n","                    name = 'conv4_2', padding='same' )(x2)\n","  x2 = layers.BatchNormalization()(x2)\n","  x2 = layers.ReLU()(x2)\n","\n","  x2 = layers.MaxPool1D(pool_size=2, strides=2, name = 'max2_2')(x2)\n","\n","  x2 = layers.Flatten()(x2)\n","  #concatenate both legs\n","  concat = layers.Concatenate(name = 'concat')([x, x2])\n","\n","  #final layer as softmax\n","  outputs = layers.Dense(5, activation=tf.nn.softmax, name = 'soft') (concat)\n","\n","  model = keras.Model(inputs=inputs, outputs=outputs, name='sleep')\n","\n","  return model"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"RY8fc8uBoFjW","executionInfo":{"status":"ok","timestamp":1605155346290,"user_tz":300,"elapsed":380139,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"f35075e7-db23-4055-c650-8960cfcb9c12","colab":{"base_uri":"https://localhost:8080/"}},"source":["n_split=5 # range between 10 - 20 folds\n","\n","skf = StratifiedKFold(n_splits=n_split, random_state=47)\n","\n","cv_results = []\n","k = 0\n","for train_index,test_index in skf.split(X, Y):\n","  begin_time_loop = dt.now()\n","\n","  \n","  X_train,X_test=X[train_index],X[test_index]\n","  y_train,y_test=Y[train_index],Y[test_index]\n","\n","  k = k+1\n","  a = np.zeros((3000, 1))\n","\n","  X_train = np.insert(X_train, 0, a, axis=0)\n","  X_train = np.insert(X_train, 0, a, axis=0)\n","  X_train = np.insert(X_train, -1, a, axis=0)\n","  X_train = np.insert(X_train, -1, a, axis=0)\n","  X_test = np.insert(X_test, 0, a, axis=0)\n","  X_test = np.insert(X_test, 0, a, axis=0)\n","  X_test = np.insert(X_test, -1, a, axis=0)\n","  X_test = np.insert(X_test, -1, a, axis=0)\n","\n","  X_train2 = []\n","  for i in range(len(X_train)-4):\n","    j = i + 2\n","    clip = np.array([X_train[j-2], X_train[j-1], X_train[j], X_train[j+1], X_train[j+2]]).reshape((15000,1))\n","    X_train2.append(clip)\n","\n","  X_test2 = []\n","  for i in range(len(X_test)-4):\n","    j = i + 2\n","    clip = np.array([X_test[j-2], X_test[j-1], X_test[j], X_test[j+1], X_test[j+2]]).reshape((15000,1))\n","    X_test2.append(clip)\n","\n","  X_train_2=np.array(X_train2)\n","  X_test_2=np.array(X_test2)\n","\n","  model = cnn_builder()\n","\n","  #compile and define Adam optimizer\n","  model.compile(loss=keras.losses.SparseCategoricalCrossentropy(),\n","              optimizer=keras.optimizers.Adam(learning_rate=0.001),\n","              metrics=['accuracy'])\n","\n","  history = model.fit(X_train_2, y_train,\n","                    batch_size=100,\n","                    epochs=6, verbose= 0) \n","  \n","  \n","  y_prob = model.predict(X_test_2)\n","\n","  y_pred = y_prob.argmax(axis=-1)\n","  \n","  k_acc = accuracy_score(y_test,y_pred)\n","  print(k_acc)\n","\n","  elapsed = dt.now() - begin_time_loop  \n","  print('Fold {} took {}'.format(str(k), str(elapsed)))\n","  \n","  fold_result = {'fold': k, 'time': elapsed,'y_test': y_test, 'y_pred': y_pred, 'y_prob': y_prob,\n","               'history': history.history, 'accuracy': k_acc }\n","\n","\n","  del inputs, outputs, x1, x2, concat, model # delete model objects to guarantee each fold is trained from zero\n","      \n","  cv_results.append(fold_result)\n"],"execution_count":5,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_split.py:296: FutureWarning: Setting a random_state has no effect since shuffle is False. This will raise an error in 0.24. You should leave random_state to its default (None), or set shuffle=True.\n","  FutureWarning\n"],"name":"stderr"},{"output_type":"stream","text":["0.8572441503190735\n","Fold 1 took 0:01:21.504371\n","0.7712124793193098\n","Fold 2 took 0:01:14.635731\n","0.8392814937367052\n","Fold 3 took 0:01:14.056333\n","0.8351258716463775\n","Fold 4 took 0:01:14.617333\n","0.8386715518260253\n","Fold 5 took 0:01:13.921334\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gXuMkmRsYxfX","executionInfo":{"status":"ok","timestamp":1605155352913,"user_tz":300,"elapsed":653,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"ffe87f9d-1f5e-4611-9fb5-de6ebc759d45","colab":{"base_uri":"https://localhost:8080/"}},"source":["# save results for further analysis when required\n","\n","import pickle\n","\n","path = '/content/gdrive/My Drive/Automatic_sleep_classification/results/cnnconcat.pkl'\n","\n","with open(path, 'wb') as f:\n","    pickle.dump(cv_results, f)\n","\n","# unravel y_pred and y_test into unique vectors for classification report\n","y_pred=[]\n","y_test=[]\n","for i in cv_results:\n","  y_pred.extend(i['y_pred'])\n","  y_test.extend(i['y_test'])\n","\n","\n","print(classification_report(y_test,y_pred, digits=4) )\n","\n"],"execution_count":6,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0     0.8945    0.8250    0.8583      8285\n","           1     0.4598    0.3406    0.3913      2804\n","           2     0.8795    0.8607    0.8700     17799\n","           3     0.8394    0.8899    0.8639      5703\n","           4     0.7517    0.8888    0.8145      7717\n","\n","    accuracy                         0.8283     42308\n","   macro avg     0.7650    0.7610    0.7596     42308\n","weighted avg     0.8259    0.8283    0.8251     42308\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AGzORKhN9GkH","executionInfo":{"status":"ok","timestamp":1604893693493,"user_tz":300,"elapsed":1182,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"89064258-0080-42aa-ae78-706eaf4a0c94","colab":{"base_uri":"https://localhost:8080/","height":495}},"source":["# print confusion matrix\n","\n","C = confusion_matrix( y_test ,y_pred)\n","cn = np.transpose( np.transpose(C) / C.astype(np.float).sum(axis=1) )\n","cn = np.round(cn, 2)\n","\n","df_cm = pd.DataFrame(\n","    cn, index=['0-W','1-N1','2-N2','3-N3','4-REM'], columns=['0-W','1-N1','2-N2','3-N3','4-REM'])\n","fig = plt.figure(figsize=(8,7))\n","try:\n","    heatmap = sns.heatmap(df_cm, annot=True, cmap = \"Blues\", annot_kws={\"size\": 14})\n","except ValueError:\n","    raise ValueError(\"Confusion matrix values must be integers.\")\n","heatmap.yaxis.set_ticklabels(heatmap.yaxis.get_ticklabels(), rotation=0, ha='right', fontsize=14)\n","heatmap.xaxis.set_ticklabels(heatmap.xaxis.get_ticklabels(), rotation=45, ha='right', fontsize=14)\n","plt.ylabel('True labels', fontsize = 14)\n","plt.xlabel('Predicted labels',  fontsize=14)\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 42.0, 'Predicted labels')"]},"metadata":{"tags":[]},"execution_count":17},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x504 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"NTWSs4AvTY-e"},"source":["# III. CNN + LSTM\n","\n","The second network architecture to test in the dataset is an ensemble of CNN and LSTM, with rearrengement of feature vectors before the LSTM component, inspired from the proposed one in Supratak et al. (2017).\n","\n","Please refer to the diagram below to review the details of the network. More explanation is provided in the papers. \n","\n","<img src='https://drive.google.com/uc?export=view&id=1LRjjSOkMmudf-V8I_o_GjnOrZ59aW-yK' alt=\"drawing\" width=\"300\"/>\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"Us6LVPApvR17","executionInfo":{"status":"ok","timestamp":1605156768186,"user_tz":300,"elapsed":694,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}}},"source":["def lstm_builder():\n","\n","  inputs = keras.Input(shape=(5,2688))\n","\n","  x = layers.Dropout(rate=0.5  , name ='lstm_dropout1' )(inputs)\n","\n","  x1 = Bidirectional(layers.LSTM(512, return_sequences=True)) (x)\n","  x1 = layers.Dropout(rate=0.5  , name ='lstm_dropout2' )(x1)\n","\n","  x1 = Bidirectional(layers.LSTM(512)) (x1)\n","  x1 = layers.Dropout(rate=0.5  , name ='lstm_dropout3' )(x1)\n","\n","  x2 = layers.Dense(1024)(x)\n","  x2 = layers.BatchNormalization()(x2)\n","  x2 = layers.ReLU(name = 'lstm_residual1')(x2)\n","\n","  addition = layers.Add(name = 'lstm_concat1')([x1, x2])\n","\n","\n","  x3 = layers.BatchNormalization()(addition)\n","  x3 = layers.ReLU(name = 'lstm_residual2')(x3)\n","\n","  x3 = layers.Dropout(rate=0.5  , name ='lstm_dropout4' )(addition)\n","\n","  x3 = layers.Flatten()(x3)\n","\n","  outputs = layers.Dense(5, activation=tf.nn.softmax, name = 'lstm_soft') (x3)\n","\n","  model_lstm = keras.Model(inputs=inputs, outputs=outputs, name='lstmsleep')\n","\n","  return model_lstm\n"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"AmXtjMwMBLKr","executionInfo":{"status":"ok","timestamp":1605157386096,"user_tz":300,"elapsed":616514,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"466eed2a-abef-45f1-d0c4-26406584a6d3","colab":{"base_uri":"https://localhost:8080/"}},"source":["from tensorflow.keras.layers import Bidirectional #we will be needing this layer\n","\n","\n","# perform training and prediction for 20 stratified folds\n","\n","\n","skf = StratifiedKFold(n_splits=5) #10 - 20\n","\n","cv_results = []\n","k = 0\n","for train_index,test_index in skf.split(X, Y):\n","  begin_time_loop = dt.now()\n","  print('Current time: {}'.format(str(begin_time_loop)))\n","\n","  k = k+1\n","  X_train,X_test=X[train_index],X[test_index]\n","  y_train,y_test=Y[train_index],Y[test_index]\n","\n","\n","  #CNN\n","  model = cnn_builder( model_type = 'CNN+LSTM')\n","\n","  model.compile(loss=keras.losses.SparseCategoricalCrossentropy(),\n","              optimizer=keras.optimizers.Adam(learning_rate=0.001),\n","              metrics=['accuracy'])\n","  \n","  history1 = model.fit(X_train, y_train,\n","                    batch_size=100,\n","                    epochs=19, verbose=0) # 24\n","\n","\n","  #get feature vectors\n","  layer_name = 'concat'\n","  intermediate_layer_model = keras.Model(inputs=model.input,\n","                                  outputs=model.get_layer(layer_name).output)\n","  intermediate_output_train = intermediate_layer_model.predict(X_train)\n","  intermediate_output_test = intermediate_layer_model.predict(X_test)\n","  X_train_lstm = intermediate_output_train\n","  X_test_lstm = intermediate_output_test\n","\n","  a = np.zeros((1, 2688))\n","\n","  X_train_lstm = np.insert(X_train_lstm, 0, a, axis=0)\n","  X_train_lstm = np.insert(X_train_lstm, 0, a, axis=0)\n","  X_train_lstm = np.insert(X_train_lstm, -1, a, axis=0)\n","  X_train_lstm = np.insert(X_train_lstm, -1, a, axis=0)\n","\n","  X_test_lstm = np.insert(X_test_lstm, 0, a, axis=0)\n","  X_test_lstm = np.insert(X_test_lstm, 0, a, axis=0)\n","  X_test_lstm = np.insert(X_test_lstm, -1, a, axis=0)\n","  X_test_lstm = np.insert(X_test_lstm, -1, a, axis=0)\n","\n","  X_train_lstm2 = []\n","  for i in range(len(X_train_lstm)-4):\n","    j = i + 2\n","    clip = np.array([X_train_lstm[j-2], X_train_lstm[j-1], X_train_lstm[j], X_train_lstm[j+1], X_train_lstm[j+2]])\n","    X_train_lstm2.append(clip)\n","\n","  X_test_lstm2 = []\n","  for i in range(len(X_test_lstm)-4):\n","    j = i + 2\n","    clip = np.array([X_test_lstm[j-2], X_test_lstm[j-1], X_test_lstm[j], X_test_lstm[j+1], X_test_lstm[j+2]])\n","    X_test_lstm2.append(clip)\n","\n","  X_train_lstm3=np.array(X_train_lstm2)\n","  X_test_lstm3=np.array(X_test_lstm2)\n","\n","  #LSTM\n","  lstm = lstm_builder()\n","\n","  lstm.compile(loss=keras.losses.SparseCategoricalCrossentropy(),\n","              optimizer=keras.optimizers.Adam(learning_rate=0.001),\n","              metrics=['accuracy'])\n","\n","  history2 = lstm.fit(X_train_lstm3, y_train,\n","                      batch_size=100,\n","                      epochs=5, verbose=0) # \n","                      \n","  test_scores = lstm.evaluate(X_test_lstm3, y_test, verbose=0)\n","  print('Test accuracy:', test_scores[1])  \n","\n","  y_prob = lstm.predict(X_test_lstm3)\n","\n","  y_pred = y_prob.argmax(axis=-1)\n","\n","  elapsed = dt.now() - begin_time_loop\n","  print('Fold {} took {}'.format(str(k), str(elapsed)))\n","  \n","  fold_result = {'fold': k, 'time': elapsed,'y_test': y_test, 'y_pred': y_pred, 'y_prob': y_prob,\n","               'history_cnn': history1.history, 'history_lstm': history2.history,  'accuracy': test_scores[1] }\n","    \n","      \n","  cv_results.append(fold_result)\n"],"execution_count":23,"outputs":[{"output_type":"stream","text":["Current time: 2020-11-12 04:52:51.536660\n","Test accuracy: 0.8850153684616089\n","Fold 1 took 0:02:03.094468\n","Current time: 2020-11-12 04:54:54.632062\n","Test accuracy: 0.7987473607063293\n","Fold 2 took 0:02:02.720444\n","Current time: 2020-11-12 04:56:57.353280\n","Test accuracy: 0.8520444631576538\n","Fold 3 took 0:02:02.410019\n","Current time: 2020-11-12 04:58:59.763968\n","Test accuracy: 0.8306346535682678\n","Fold 4 took 0:02:03.880290\n","Current time: 2020-11-12 05:01:03.645019\n","Test accuracy: 0.8501359224319458\n","Fold 5 took 0:02:03.663343\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Jt59ewE1UplW","executionInfo":{"status":"ok","timestamp":1605157450406,"user_tz":300,"elapsed":610,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"a80223e7-0732-4980-fa66-caaf2a32d7c6","colab":{"base_uri":"https://localhost:8080/"}},"source":["\n","import pickle\n","\n","path = '/content/gdrive/My Drive/Automatic_sleep_classification/results/cnnlstm.pkl'\n","\n","with open(path, 'wb') as f:\n","    pickle.dump(cv_results, f)\n","\n","# unravel y_pred and y_test into unique vectors for classification report\n","y_pred=[]\n","y_test=[]\n","for i in cv_results:\n","  y_pred.extend(i['y_pred'])\n","  y_test.extend(i['y_test']) \n","\n","\n","print(classification_report(y_test,y_pred, digits=4) )\n","\n","## accuracy is higher when trained around 20 folds\n"],"execution_count":24,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0     0.8318    0.9164    0.8720      8285\n","           1     0.4246    0.3959    0.4097      2804\n","           2     0.8880    0.8812    0.8846     17799\n","           3     0.9002    0.8874    0.8938      5703\n","           4     0.8557    0.8074    0.8309      7717\n","\n","    accuracy                         0.8433     42308\n","   macro avg     0.7801    0.7777    0.7782     42308\n","weighted avg     0.8420    0.8433    0.8421     42308\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"C3zGnJwZU8WQ","executionInfo":{"status":"ok","timestamp":1605152593065,"user_tz":300,"elapsed":1141,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"b406bf37-3a48-4271-a244-312520ae9726","colab":{"base_uri":"https://localhost:8080/","height":495}},"source":["# print confusion matrix\n","\n","C = confusion_matrix( y_test ,y_pred)\n","cn = np.transpose( np.transpose(C) / C.astype(np.float).sum(axis=1) )\n","cn = np.round(cn, 2)\n","\n","df_cm = pd.DataFrame(\n","    cn, index=['0-W','1-N1','2-N2','3-N3','4-REM'], columns=['0-W','1-N1','2-N2','3-N3','4-REM'])\n","fig = plt.figure(figsize=(8,7))\n","try:\n","    heatmap = sns.heatmap(df_cm, annot=True, cmap = \"Blues\", annot_kws={\"size\": 14})\n","except ValueError:\n","    raise ValueError(\"Confusion matrix values must be integers.\")\n","heatmap.yaxis.set_ticklabels(heatmap.yaxis.get_ticklabels(), rotation=0, ha='right', fontsize=14)\n","heatmap.xaxis.set_ticklabels(heatmap.xaxis.get_ticklabels(), rotation=45, ha='right', fontsize=14)\n","plt.ylabel('True labels', fontsize = 14)\n","plt.xlabel('Predicted labels',  fontsize=14)\n","\n"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 42.0, 'Predicted labels')"]},"metadata":{"tags":[]},"execution_count":9},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x504 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"xUDDg6_iU9Su","executionInfo":{"status":"ok","timestamp":1605152594979,"user_tz":300,"elapsed":615,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"7eb7df65-1296-4266-be23-92625a4b073b","colab":{"base_uri":"https://localhost:8080/"}},"source":["#average time of training+prediction per fold\n","\n","elapsed_t = []\n","for i in cv_results:\n","  elapsed_t.append(i['time'])\n","\n","elapsed_t = pd.Series(elapsed_t)\n","elapsed_t.mean()\n"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Timedelta('0 days 00:02:03.454756600')"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"xh7L3L0qy1pG","executionInfo":{"status":"ok","timestamp":1605152669905,"user_tz":300,"elapsed":612,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}}},"source":["#if data neews to be uploaded again, this cell helps\n","\n","import pickle\n","with open('/content/gdrive/My Drive/Automatic_sleep_classification/results/cnnlstm.pkl', 'rb') as f:\n","    data = pickle.load(f)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"slJN91any1pS","executionInfo":{"status":"ok","timestamp":1605152753734,"user_tz":300,"elapsed":695,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"43278cc0-2a21-477b-841b-36ae3e57758f","colab":{"base_uri":"https://localhost:8080/","height":585}},"source":["# plot accuracy curves per training epoch. Uncomment lines if want figures to be saved\n","accuracies = []\n","accuracies.extend(data[3]['history_cnn']['accuracy'])\n","accuracies.extend(data[3]['history_lstm']['accuracy'])\n","\n","plt.plot(data[3]['history_lstm']['accuracy'])\n","plt.title('LSTM', fontsize =14)\n","plt.ylabel('Accuracy', fontsize=14)\n","plt.xlabel('Época' , fontsize=13)\n","plt.xticks(ticks = np.arange(0, 5, step=1),  labels =  np.arange(1, 6, step=1))\n","#plt.savefig( 'fill-with-path' ,bbox_inches='tight')\n","plt.show()\n","\n","plt.plot(data[3]['history_cnn']['accuracy'])\n","plt.title('CNN', fontsize =14)\n","plt.ylabel('Accuracy', fontsize=14)\n","plt.xlabel('Época' , fontsize=13)\n","plt.xticks(ticks = np.arange(0, 19, step=1),  labels =  np.arange(1, 20, step=1))\n","#plt.savefig( 'fill-with-path' ,bbox_inches='tight')\n","plt.show()\n"],"execution_count":13,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"oQ_7p0KkSrRz"},"source":["# IV. Hypnogram comparison\n","\n","In this section we want to use the classifier to predict only one of the sleep recordings and use the rest of the recordings as training set. Then we will compare the predicted hypnogram of this sleep recording to the real one, to obtain a visual comparison of the predictions, similar to what a doctor would use."]},{"cell_type":"code","metadata":{"id":"g-g8AZhGSvkj","executionInfo":{"status":"ok","timestamp":1605157899246,"user_tz":300,"elapsed":147011,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"85ed1b4f-e935-40e9-eb2e-4c3322bb1ec3","colab":{"base_uri":"https://localhost:8080/"}},"source":["import random\n","import datetime\n","path = '/content/gdrive/My Drive/Automatic_sleep_classification/data' \n","files = os.listdir(path)\n","filespath = [] #lista de archivos npz\n","for i in files:\n","  filespath.append(os.path.join(path,i))\n","\n","\n","def one_record_test_set(filespath,i):\n","\n","  files = filespath[:]\n","  test_record = files.pop(i)\n","  print('Using record {} as test set'.format(test_record))\n","\n","  X_test, y_test = _load_npz_list_files([test_record])\n","  X_train, y_train = _load_npz_list_files(files)\n","\n","  print(X_test.shape, y_test.shape, X_train.shape, y_train.shape)\n","\n","  return X_train, X_test, y_train, y_test, test_record\n","\n","cv_results = []\n","\n","for i in range(1):\n","  i =  -7 #we select this recording because it produces an accuracy score comparable to the general accuracy when trained with cross val\n","  X_train, X_test, y_train, y_test, record = one_record_test_set(filespath, i) \n","\n","  begin_time_loop = datetime.datetime.now()\n","  print('Current time: {}'.format(str(begin_time_loop)))\n","\n","    #CNN\n","\n","  model = cnn_builder(model_type = 'CNN+LSTM')\n","\n","  model.compile(loss=keras.losses.SparseCategoricalCrossentropy(),\n","              optimizer=keras.optimizers.Adam(learning_rate=0.001),\n","              metrics=['accuracy'])\n","  \n","  history1 = model.fit(X_train, y_train,\n","                    batch_size=100,\n","                    epochs=19, verbose=0) # 24\n","\n","\n","  #get feature vectors\n","  layer_name = 'concat'\n","  intermediate_layer_model = keras.Model(inputs=model.input,\n","                                  outputs=model.get_layer(layer_name).output)\n","  intermediate_output_train = intermediate_layer_model.predict(X_train)\n","  intermediate_output_test = intermediate_layer_model.predict(X_test)\n","  X_train_lstm = intermediate_output_train\n","  X_test_lstm = intermediate_output_test\n","\n","\n","  a = np.zeros((1, 2688))\n","\n","  X_train_lstm = np.insert(X_train_lstm, 0, a, axis=0)\n","  X_train_lstm = np.insert(X_train_lstm, 0, a, axis=0)\n","  X_train_lstm = np.insert(X_train_lstm, -1, a, axis=0)\n","  X_train_lstm = np.insert(X_train_lstm, -1, a, axis=0)\n","\n","  X_test_lstm = np.insert(X_test_lstm, 0, a, axis=0)\n","  X_test_lstm = np.insert(X_test_lstm, 0, a, axis=0)\n","  X_test_lstm = np.insert(X_test_lstm, -1, a, axis=0)\n","  X_test_lstm = np.insert(X_test_lstm, -1, a, axis=0)\n","\n","  X_train_lstm2 = []\n","  for i in range(len(X_train_lstm)-4):\n","    j = i + 2\n","    clip = np.array([X_train_lstm[j-2], X_train_lstm[j-1], X_train_lstm[j], X_train_lstm[j+1], X_train_lstm[j+2]])\n","    X_train_lstm2.append(clip)\n","\n","  X_test_lstm2 = []\n","  for i in range(len(X_test_lstm)-4):\n","    j = i + 2\n","    clip = np.array([X_test_lstm[j-2], X_test_lstm[j-1], X_test_lstm[j], X_test_lstm[j+1], X_test_lstm[j+2]])\n","    X_test_lstm2.append(clip)\n","\n","  X_train_lstm3=np.array(X_train_lstm2)\n","  X_test_lstm3=np.array(X_test_lstm2)\n","\n","  #LSTM\n","  lstm = lstm_builder()\n","\n","  lstm.compile(loss=keras.losses.SparseCategoricalCrossentropy(),\n","              optimizer=keras.optimizers.Adam(learning_rate=0.001),\n","              metrics=['accuracy'])\n","\n","  history2 = lstm.fit(X_train_lstm3, y_train,\n","                      batch_size=100,\n","                      epochs=5, verbose=0) # \n","                      \n","  test_scores = lstm.evaluate(X_test_lstm3, y_test, verbose=0)\n","  print('Test accuracy:', test_scores[1])  \n","\n","  y_prob = lstm.predict(X_test_lstm3)\n","\n","  y_pred = y_prob.argmax(axis=-1)\n","\n","  elapsed = datetime.datetime.now() - begin_time_loop\n","  print('Fold {} took {}'.format(str(1), str(elapsed)))\n","  \n","  fold_result = {'record': record, 'time': elapsed,'y_test': y_test, 'y_pred': y_pred, 'accuracy': test_scores[1] }\n","    \n","      \n","  cv_results.append(fold_result)\n"," \n"," # 0.8341862559318542"],"execution_count":26,"outputs":[{"output_type":"stream","text":["Using record /content/gdrive/My Drive/Automatic_sleep_classification/data/SC4122E0.npz as test set\n","(977, 3000, 1) (977,) (41331, 3000, 1) (41331,)\n","Current time: 2020-11-12 05:09:15.657266\n","Test accuracy: 0.8311156630516052\n","Fold 1 took 0:02:24.776364\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"c612x_qlaOPB","executionInfo":{"status":"ok","timestamp":1605157962730,"user_tz":300,"elapsed":1550,"user":{"displayName":"Carlos Fabbri Garcia","photoUrl":"","userId":"14351255903339752641"}},"outputId":"4cd9020b-d8c7-43c0-c3b6-06dcb7767556","colab":{"base_uri":"https://localhost:8080/","height":550}},"source":["y_pred = cv_results[0]['y_pred']\n","y_test = cv_results[0]['y_test']\n","\n","from seaborn import lineplot\n","\n","fig, axs = plt.subplots(2,1, figsize=(20,7))\n","\n","axs[0].set_title('Real hypnogram', size = 14)\n","axs[0].set_ylabel('Sleep stage', fontsize=14)\n","axs[0].set_yticks([0,1,2,3,4])\n","\n","\n","axs[1].set_title('Predicted Hypnogram', size = 14)\n","axs[1].set_ylabel('Sleep stage', fontsize=14)\n","axs[1].set_yticks([0,1,2,3,4])\n","\n","axs[1].set_xlabel('Time (in 30 second epochs)', fontsize=14)\n","\n","sns.lineplot(np.arange(len(y_test)), y_test, ax = axs[0])\n","sns.lineplot(np.arange(len(y_pred)), y_pred, ax = axs[1])\n","\n","\n","# fig.savefig('fill-with-path',bbox_inches='tight')\n"],"execution_count":27,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n","/usr/local/lib/python3.6/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x504 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"azM6BMOO3r1Z"},"source":[""],"execution_count":null,"outputs":[]}]}